{"version":3,"sources":["Components/Navbar.js","Components/Home.jsx","Components/History.jsx","App.js","serviceWorker.js","index.js"],"names":["Navbar","react_default","a","createElement","className","react_router_dom","activeClassName","exact","to","Component","Home","History","App","Components_Navbar","react_router","path","component","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"iPAwBeA,mLAnBb,OACCC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACdH,EAAAC,EAAAC,cAAA,UACCF,EAAAC,EAAAC,cAAA,UACCF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAASC,gBAAgB,SAASC,OAAK,EAACC,GAAG,KAA3C,SAKDP,EAAAC,EAAAC,cAAA,UACCF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAASC,gBAAgB,SAASE,GAAG,iBAArC,qBAZeC,qBCmBNC,mLAlBb,OACCT,EAAAC,EAAAC,cAAA,WACCF,EAAAC,EAAAC,cAAA,0BACAF,EAAAC,EAAAC,cAAA,43BALeM,aCmBJE,mLAjBb,OACCV,EAAAC,EAAAC,cAAA,WACCF,EAAAC,EAAAC,cAAA,6BACAF,EAAAC,EAAAC,cAAA,uvBALkBM,aCoBPG,mLAdb,OACCX,EAAAC,EAAAC,cAACE,EAAA,EAAD,KACCJ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACdH,EAAAC,EAAAC,cAACU,EAAD,MACAZ,EAAAC,EAAAC,cAACW,EAAA,EAAD,KACCb,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAOP,OAAK,EAACQ,KAAK,IAAIC,UAAWN,IAEjCT,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAOC,KAAK,eAAeC,UAAWL,cAT1BF,aCMEQ,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOtB,EAAAC,EAAAC,cAACqB,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.d3736657.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { NavLink } from 'react-router-dom';\n\nclass Navbar extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<nav className=\"navBar\">\n\t\t\t\t<ul>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<NavLink activeClassName=\"active\" exact to=\"/\">\n\t\t\t\t\t\t\tHome\n\t\t\t\t\t\t</NavLink>\n\t\t\t\t\t</li>\n\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<NavLink activeClassName=\"active\" to=\"/our-history/\">\n\t\t\t\t\t\t\tHistory\n\t\t\t\t\t\t</NavLink>\n\t\t\t\t\t</li>\n\t\t\t\t</ul>\n\t\t\t</nav>\n\t\t);\n\t}\n}\nexport default Navbar;\n","import React, { Component } from 'react';\n\nclass Home extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<h1>Hello There!</h1>\n\t\t\t\t<p>\n\t\t\t\t\tA welcome is a kind of greeting designed to introduce a person to a new place or situation, and to\n\t\t\t\t\tmake them feel at ease. The term can similarly be used to describe the feeling of being accepted on\n\t\t\t\t\tthe part of the new person. In some contexts, a welcome is extended to a stranger to an area or a\n\t\t\t\t\thousehold. \"The concept of welcoming the stranger means intentionally building into the interaction\n\t\t\t\t\tthose factors that make others feel that they belong, that they matter, and that you want to get to\n\t\t\t\t\tknow them\". It is also noted, however, that \"n many community settings, being welcoming is viewed as\n\t\t\t\t\tin conflict with ensuring safety. Thus, welcoming becomes somewhat self-limited: 'We will be\n\t\t\t\t\twelcoming unless you do something unsafe'\". Different cultures have their own traditional forms of\n\t\t\t\t\twelcome, and a variety of different practices can go into an effort to welcome:\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t);\n\t}\n}\nexport default Home;\n","import React, { Component } from 'react';\n\nclass History extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<h1>History of Salt</h1>\n\t\t\t\t<p>\n\t\t\t\t\tSalt, also referred to as table salt or by its chemical formula NaCl, is an ionic compound made of\n\t\t\t\t\tsodium and chloride ions. All life has evolved to depend on its chemical properties to survive. It\n\t\t\t\t\thas been used by humans for thousands of years, from food preservation to seasoning. Salt's ability\n\t\t\t\t\tto preserve food was a founding contributor to the development of civilization. It helped to\n\t\t\t\t\teliminate dependence on seasonal availability of food, and made it possible to transport food over\n\t\t\t\t\tlarge distances. However, salt was often difficult to obtain, so it was a highly valued trade item,\n\t\t\t\t\tand was considered a form of currency by certain peoples. Many salt roads, such as the via Salaria\n\t\t\t\t\tin Italy, had been established by the Bronze age.\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t);\n\t}\n}\nexport default History;\n","import React, { Component } from 'react';\nimport Navbar from './Components/Navbar';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport Home from './Components/Home';\nimport History from './Components/History';\n\nclass App extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<BrowserRouter>\n\t\t\t\t<div className=\"App\">\n\t\t\t\t\t<Navbar />\n\t\t\t\t\t<Switch>\n\t\t\t\t\t\t<Route exact path=\"/\" component={Home} />\n\n\t\t\t\t\t\t<Route path=\"/our-history\" component={History} />\n\t\t\t\t\t</Switch>\n\t\t\t\t</div>\n\t\t\t</BrowserRouter>\n\t\t);\n\t}\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}